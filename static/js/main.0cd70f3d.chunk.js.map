{"version":3,"sources":["contexts/TransectionReducer.js","contexts/GloState.js","components/AddTransection.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transections.js","components/ListOfTransection.js","App.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initState","GloContext","createContext","GloProvider","children","useReducer","TransectionReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransection","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transections","sign","abs","onClick","ListOfTransection","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd70f3d.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n    case 'ADD':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer } from 'react';\r\n// import AppReducer from './AppReducer';\r\nimport TransectionReducer from './TransectionReducer';\r\n\r\n// Initial state\r\nconst initState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GloContext = createContext(initState);\r\n\r\n// Provider component\r\nexport const GloProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(TransectionReducer, initState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GloContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GloContext.Provider>);\r\n}","import React, {useState, useContext} from 'react'\r\nimport { GloContext } from '../contexts/GloState';\r\n\r\nexport const AddTransection = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GloContext);\r\n\r\n  const onSubmited = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmited}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Entry Name</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative for expense, positive for income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GloContext } from '../contexts/GloState';\r\n\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GloContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n    <h1>${total}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Expense Tracker\r\n    </h2>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GloContext } from '../contexts/GloState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GloContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n  <p className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n  <p className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GloContext } from '../contexts/GloState';\r\n\r\nexport const Transections = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GloContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n      <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GloContext } from '../contexts/GloState';\r\nimport { Transections } from './Transections'\r\n\r\nexport const ListOfTransection = () => {\r\n  const { transactions } = useContext(GloContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n          {transactions.map(transaction => (\r\n            <Transections key={transaction.id} \r\n            transaction={transaction} />)\r\n          )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {AddTransection} from './components/AddTransection';\nimport {Balance} from './components/Balance';\nimport {Header} from './components/Header';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {ListOfTransection} from './components/ListOfTransection';\nimport  {GloProvider}  from './contexts/GloState';\n\nfunction App() {\n  return (\n    <GloProvider>\n      <div className=\"container\">\n        <Header />\n        <Balance />\n        <IncomeExpenses />\n        <ListOfTransection />\n        <AddTransection />\n      </div>\n    </GloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}